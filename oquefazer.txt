Ainda precisa arrumar o banco de dados
1- corrigir erro de adicionar uma a mais, esta criando um novo objeto no banco de dados e nao adicionando mais uma obra

2-  Carregar dados do banco de dados ao invés de manter listas em memória
Substituir:

self.acervo → buscar direto da tabela obras

self.usuarios → buscar direto da tabela usuarios

self.historico_emprestimos → buscar direto da tabela emprestimos

Consequências práticas:

Toda vez que for listar obras ou buscar um usuário/obra/emprestimo, deve consultar o banco, não a estrutura em memória.

3- Modificar os métodos de busca para usarem o banco
encontrar_obra(id_obra) → buscar no banco
encontrar_usuario(id_usuario) → buscar no banco
emprestimo_por_id(id_emprestimo) → buscar no banco

4- Atualizar a devolução para também restaurar a quantidade da obra
No método devolver, você deve atualizar a quantidade da obra no banco (+1), além de registrar devolução.

5- Relatórios e listagens devem vir do banco
listar_obras() deve fazer um SELECT * FROM obras e retornar o dicionário

relatorio_inventario() já pode usar listar_obras() como base

relatorio_debitos() → fazer um SELECT * FROM usuarios WHERE divida > 0

historico_usuario(usuario) → fazer um SELECT * FROM emprestimos WHERE usuario_id = ?

6- Remover completamente as estruturas de memória (self.acervo, self.usuarios, etc.)
Essas estruturas deixam os dados inconsistentes se outro processo alterar o banco

Após migrar toda a lógica para usar o SQLite, remova:

7- Melhorar emprestar e devolver para atualizar banco corretamente
Atualizar a quantidade da obra ao emprestar e devolver

Verificar se obra tem quantidade > 0 no banco antes de emprestar